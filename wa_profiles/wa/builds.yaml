# Define starting input. Will be overridden if start_from_alignment.smk is
# added as a custom rule.
sequences: "data/sequences.fasta"
metadata: "data/metadata.tsv"

# Defines next align specs
genes: ["ORF1a", "ORF1b", "S", "ORF3a", "M", "N"]
use_nextalign: true
conda_environment: "workflow/envs/nextstrain.yaml"

# Define custom rules
custom_rules:
  - wa_profiles/wa/add_to_builds.smk

# Define custom auspice configuration to enable frequencies.
files:
  auspice_config: "wa_profiles/wa/auspice_config.json"

# Define WA builds.
builds:
#  wa_mar20-jun20:
#    title: "Washington-focused SARS-CoV-2 genomic analysis: Through June 2020"
#    colors: wa_profiles/wa/colors.tsv
#    description: wa_profiles/wa/descriptions/mar20-jun20_description.md
#    division: Washington
#    latest_date: 2020-06-30
#    subsampling_scheme: early

#  wa_jul20-oct20:
#    title: "Washington-focused SARS-CoV-2 genomic analysis: July-October 2020"
#    colors: wa_profiles/wa/colors.tsv
#    description: wa_profiles/wa/descriptions/jul20-oct20_description.md
#    division: Washington
#    earliest_date: 2020-07-01
#    latest_date: 2020-10-31
#    n_sequences: 1250
#    subsampling_scheme: month

  wa_nov20-feb21:
    title: "Washington-focused SARS-CoV-2 genomic analysis: November 2020-February 2021"
    colors: wa_profiles/wa/colors.tsv
    description: wa_profiles/wa/descriptions/nov20-feb21_description.md
    division: Washington
    earliest_date: 2020-11-01
    latest_date: 2021-02-28
    n_sequences: 4000
    subclades: wa_profiles/wa/cdc_voi_voc.tsv
    subsampling_scheme: month

  wa_mar21-jun21:
    title: "Washington-focused SARS-CoV-2 genomic analysis: March 2021 on"
    colors: wa_profiles/wa/colors.tsv
    description: wa_profiles/wa/descriptions/mar21-jun21_description.md
    division: Washington
    earliest_date: 2021-03-01
    latest_date: 2021-06-30
    n_sequences: 250
    subclades: wa_profiles/wa/cdc_voi_voc.tsv
    subsampling_scheme: month

  wa_4m:
    title: "Washington-focused SARS-CoV-2 genomic analysis: Past four months"
    colors: wa_profiles/wa/colors.tsv
    description: wa_profiles/wa/descriptions/four-months_description.md
    division: Washington
    n_sequences: 3750
    subclades: wa_profiles/wa/cdc_voi_voc.tsv
    subsampling_scheme: time-window

  wa_1y:
    title: "Washington-focused SARS-CoV-2 genomic analysis: Past year"
    colors: wa_profiles/wa/colors.tsv
    description: wa_profiles/wa/descriptions/year_description.md
    division: Washington
    subclades: wa_profiles/wa/cdc_voi_voc.tsv
    subsampling_scheme: one-year


# Define subsampling scheme for builds. This scheme should include as much
# local diversity for a given division as possible and contextual samples from
# the rest of the USA and the world.
subsampling:
  early:
    # Subsampling for the earliest build.
    local-focus:
      # Evenly sample across time for the current division until max-date.
      group_by: "division"
      max_sequences: 5000
      max_date: --max-date {latest_date}
      query: --query "(country == 'USA' & division == '{division}')"
    usa-context:
      # Evenly samples across time from the United States, excluding current division,until max-date.                                                                                                                                        # are that are genetically similar to the current division's sequences.
      group_by: "year month"
      max_sequences: 1000
      max_date: --max-date {latest_date}
      query: --query "(country == 'USA' & division != '{division}')"
      priorities:
        type: proximity
        focus: local-focus
    global-context:
      # Evenly samples across time until from the rest of the world, excluding the USA, until max-date.
      group_by: "region year month"
      max_sequences: 1000
      max_date: --max-date {latest_date}
      query: --query "(country != 'USA')"
      priorities:
        type: proximity
        focus: local-focus

  time-window:
    # Subsampling for a given time window
    local-focus:
      # Evenly sample from earliest_date to latest_date for the current division.
      group_by: "division"
      max_sequences: "{n_sequences}"
      max_date: --max-date {latest_date}
      min_date: --min-date {earliest_date}
      query: --query "(country == 'USA' & division == '{division}' & purpose_of_sequencing != 'S dropout')"
    usa-context:
      # Sampling in the time window from other divisions in the USA, prioritizing
      # samples genetically similar to the current division's sequences.
      group_by: "year month"
      max_sequences: "{n_usa}"
      max_date: --max-date {latest_date}
      min_date: --min-date {earliest_date}
      query: --query "(country == 'USA' & division != '{division}' & purpose_of_sequencing != 'S dropout')"
      priorities:
        type: proximity
        focus: local-focus
    global-context:
      # Even sampling in the time window from across the world excluding the USA,
      # prioritizing samples genetically similar to current division's sequences.
      group_by: "region year month"
      max_sequences: "{n_global}"
      max_date: --max-date {latest_date}
      min_date: --min-date {earliest_date}
      query: --query "(country != 'USA' & purpose_of_sequencing != 'S dropout')"
      priorities:
        type: proximity
        focus: local-focus
    local-context-early:
      # Even sampling before the time window for the current division,
      # prioritizing samples genetically similar to divison's sequences
      # within the time window.
      group_by: "year month"
      max_sequences: "{n_early}"
      max_date: --max-date {earliest_date}
      query: --query "(country == 'USA' & division == '{division}' & purpose_of_sequencing != 'S dropout')"
      priorities:
        type: proximity
        focus: local-focus
    global-context-early:
      # Even sampling before the time window from the world, excluding USA,
      # prioritizing samples genetically similar to the division.
      group_by: "region year month"
      max_sequences: "{n_global_early}"
      max_date: --max-date {earliest_date}
      query: --query "(division != '{division}' & purpose_of_sequencing != 'S dropout')"
      priorities:
        type: proximity
        focus: local-focus

  month:
    # Subsampling for a given time window
    local-focus:
      # Evenly sample from earliest_date to latest_date for the current division.
      group_by: "division"
      max_sequences: "{n_sequences}"
      max_date: --max-date {latest_date}
      min_date: --min-date {earliest_date}
      query: --query "(country == 'USA' & division == '{division}')"
    usa-context:
      # Sampling in the time window from other divisions in the USA, prioritizing
      # samples genetically similar to the current division's sequences.
      group_by: "year month"
      max_sequences: "{n_usa}"
      max_date: --max-date {latest_date}
      min_date: --min-date {earliest_date}
      query: --query "(country == 'USA' & division != '{division}')"
      priorities:
        type: proximity
        focus: local-focus
    global-context:
      # Even sampling in the time window from across the world excluding the USA,
      # prioritizing samples genetically similar to current division's sequences.
      group_by: "region year month"
      max_sequences: "{n_global}"
      max_date: --max-date {latest_date}
      min_date: --min-date {earliest_date}
      query: --query "(country != 'USA')"
      priorities:
        type: proximity
        focus: local-focus
    local-context-early:
      # Even sampling before the time window for the current division,
      # prioritizing samples genetically similar to divison's sequences
      # within the time window.
      group_by: "year month"
      max_sequences: "{n_early}"
      max_date: --max-date {earliest_date}
      query: --query "(country == 'USA' & division == '{division}')"
      priorities:
        type: proximity
        focus: local-focus
    global-context-early:
      # Even sampling before the time window from the world, excluding USA,
      # prioritizing samples genetically similar to the division.
      group_by: "region year month"
      max_sequences: "{n_global_early}"
      max_date: --max-date {earliest_date}
      query: --query "(division != '{division}')"
      priorities:
        type: proximity
        focus: local-context-early

  one-year:
    local-focus:
      # Evenly samples across time for division.
      group_by: "year month"
      max_sequences: 3000
      min_date: --min-date {earliest_date}
      query: --query "(country == 'USA' & division == '{division}' & purpose_of_sequencing != 'S dropout')"
    usa-context:
      # Evenly samples across time from USA prioritizing samples geneticaly
      # similar to current division's sequences.
      group_by : "year month"
      max_sequences: 1200
      min_date: --min-date {earliest_date}
      query: --query "(country == 'USA' & division != '{division}'& purpose_of_sequencing != 'S dropout')"
      priorities:
        type: proximity
        focus: local-focus
    global-context:
      # Evenly samples across time from the world, excluding the USA.
      group_by: "year month"
      max_sequences: 600
      min_date: --min-date {earliest_date}
      query: --query "(country != 'USA'& purpose_of_sequencing != 'S dropout')"
      priorities:
        type: proximity
        focus: local-focus
    before:
      group_by: "year month division"
      max_sequences: 200
      max_date: --max-date {earliest_date}
      query: --query "(purpose_of_sequencing != 'S dropout')"
